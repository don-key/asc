<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
                        
<!-- 네임스페이스(사용영역) 설정 -->
<mapper namespace="com.object.asc.mapper.UserMapper">

<!-- 회원가입 -->
<insert id="register">

INSERT INTO users(id, password, name, phone, photo, status) 
VALUES (#{id}, #{password}, #{name}, #{phone}, #{photo}, #{status})

</insert>

<!-- 메일인증 후 계정 활성화 -->
<update id="setStatus">

update users set status=1 where id=#{id}

</update>


<!-- 회원 아이디 중복 체크 -->
<select id="idCheck" resultType="String">

select name from users where id=#{id}

</select>

<!-- 회원번호로 회원정보 조회-->
<select id="get" resultType="User">

select user_no as userNo, id, password, name, phone, photo, status, recent_login as recentLogin, session_key as sessionKey, session_limit as sessionLimit
 from users where user_no=#{userNo}

</select>

<!-- 회원정보 수정 -->
<update id="modify">

UPDATE users SET password = #{password}, name = #{name}, phone = #{phone}, photo = #{photo}
WHERE id = #{id}

</update>

<!-- 로그인 -->
<select id="login" resultType="User">

select user_no as userNo, id, password, name from users where id=#{id} and password=#{password}

</select>

<!-- 로그인한 사람의 세션키 세션리밋 업데이트 -->
<update id="keepLogin">

update users set session_key =#{paramMap.sessionId}, session_limit=#{paramMap.sessionLimit}
where id=#{paramMap.id}

</update>

<!-- 로그인 쿠키에 기록된 값으로 사용자 조회 -->
<select id="checkUserWithSessionKey" resultType="User">

select user_no as userNo, id, password, name, phone, photo, status, recent_login as recentLogin, session_key as sessionKey, session_limit as sessionLimit 
from users where session_key =#{cookieValue} and session_limit> now()

</select>

<!-- 이름, 전화번호로 회원아이디 찾기 -->
<select id="findId" resultType="String">

select id from users where name=#{name} and phone=#{phone}

</select>

<!-- 아이디, 이름, 전화번호로 비밀번호 찾기 -->
<select id="findPw" resultType="String">

select password from users where id=#{id} and name=#{name} and phone=#{phone}

</select>

<!-- 비밀번호찾기 후 새로운 비밀번호 등록 -->
<update id="createNewPw">

update users set password=#{password} where id=#{id}

</update>

<!-- 회원 탈퇴 -->
<update id="delete">

update users set status=2 where user_no=#{userNo}

</update>

<!-- 회원 '?%'로 시작하는 아이디 검색 -->
<select id="userFind" resultType="String">

select id from users where id like #{id}

</select>

<!-- 회원 아이디로 번호 검색 -->
<select id="userIdFind" resultType="int">

select user_no from users where id like #{id}

</select>

<!-- 회원 아이디로 이름 검색 -->
<select id="userNameFind" resultType="String">

select name from users where id like #{id}

</select>
</mapper>